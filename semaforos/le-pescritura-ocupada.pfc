program lecaso2;

(* SEGUNDO CASO : PRIORIDAD EN LA ESCRITURA (CON ESPERA OCUPADA) *)

var 
	mutex: semaphore;
	lec,nee : integer;
	writing : boolean;

process type lector;
begin
	repeat
		(*protocolo de entrada;*)
		wait(mutex);
		(*mientras existen escritores en espera o algún 
		escritor*)
		(*este escribiendo esperar*)
		while (writing = true or (nee > 0)) do
		begin
			signal(mutex);
			wait(mutex);
		end;
		lec:=lec+1;
		signal(mutex);
		writeln('leer del recurso');
		(*protocolo de salida;*)
		wait(mutex);
		lec:=lec-1;
		signal(mutex);
	forever
end;

process type escritor;
begin
	repeat
		wait(mutex);
		(*mientras algún escritor esté accediendo al 
		recurso*)
		(* o existan lectores leyendo hay que esperar*)
		nee:=nee+1;
		while(writing=true or (lec>0))do
		begin
			signal(mutex);
			wait(mutex);
		end;
		writing:=true;
		nee:=nee-1;
		signal(mutex);
		writeln('Escribir recurso');
		wait(mutex);
		writing:=false;
		signal(mutex);
	forever
end;

var 
	i : integer;
	LE: array[0..3] of lector;
	ES: array[0..3] of escritor;

begin (* main *)

	initial(mutex,1);
	writing:=false;
	lec:=0;
	nee:=0;
	
	cobegin
		for i:=0 to 3 do
		LE[i]; ES[i];
	coend
end.
